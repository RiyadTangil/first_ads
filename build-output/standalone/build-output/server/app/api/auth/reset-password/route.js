(()=>{var e={};e.id=478,e.ids=[478],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7462:(e,r,t)=>{"use strict";t.d(r,{$:()=>n});var s=t(56037),a=t.n(s);let o=null;async function n(){if(o)return o;try{let e=await a().connect("mongodb+srv://sadamon:Ri11559988@cluster0.ez5ix.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",{dbName:"client_com"});return console.log("Connected to MongoDB"),o=e,e}catch(e){throw console.error("MongoDB connection error:",e),e}}},9695:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>x,routeModule:()=>m,serverHooks:()=>g,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>h});var s={};t.r(s),t.d(s,{POST:()=>l});var a=t(96559),o=t(48088),n=t(37719),i=t(32190),d=t(7462),u=t(59990),p=t(55511),c=t.n(p);async function l(e){try{let{token:r,password:t}=await e.json();if(!r||!t)return i.NextResponse.json({error:"Please provide a token and password"},{status:400});let s=c().createHash("sha256").update(r).digest("hex");await (0,d.$)();let a=await u.A.findOne({resetPasswordToken:s,resetPasswordExpire:{$gt:Date.now()}});if(!a)return i.NextResponse.json({error:"Invalid or expired token"},{status:400});return a.password=t,a.resetPasswordToken=void 0,a.resetPasswordExpire=void 0,await a.save(),i.NextResponse.json({success:!0,message:"Password reset successful"})}catch(e){return console.error("Reset password error:",e),i.NextResponse.json({error:e.message||"Something went wrong"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/auth/reset-password/route",pathname:"/api/auth/reset-password",filename:"route",bundlePath:"app/api/auth/reset-password/route"},resolvedPagePath:"C:\\job\\client_com\\app\\api\\auth\\reset-password\\route.ts",nextConfigOutput:"standalone",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:h,serverHooks:g}=m;function x(){return(0,n.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:h})}},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},56037:e=>{"use strict";e.exports=require("mongoose")},59990:(e,r,t)=>{"use strict";t.d(r,{A:()=>i});var s=t(56037),a=t.n(s),o=t(85663);let n=new s.Schema({name:{type:String,required:[!0,"Please provide a name"],trim:!0,maxlength:[50,"Name cannot be more than 50 characters"]},username:{type:String,required:[!0,"Please provide a username"],trim:!0,unique:!0,lowercase:!0,minlength:[3,"Username must be at least 3 characters"],maxlength:[20,"Username cannot be more than 20 characters"],match:[/^[a-zA-Z0-9_\.]+$/,"Username can only contain letters, numbers, underscores and dots"]},email:{type:String,required:[!0,"Please provide an email"],unique:!0,lowercase:!0,match:[/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/,"Please provide a valid email"]},password:{type:String,required:[!0,"Please provide a password"],minlength:[6,"Password must be at least 6 characters"],select:!1},role:{type:String,enum:["user","admin"],default:"user"},resetPasswordToken:String,resetPasswordExpire:Date,createdAt:{type:Date,default:Date.now}});n.pre("save",async function(e){if(!this.isModified("password"))return void e();let r=await o.Ay.genSalt(10);this.password=await o.Ay.hash(this.password,r),e()}),n.methods.comparePassword=async function(e){return await o.Ay.compare(e,this.password)};let i=a().models.User||a().model("User",n)},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},78335:()=>{},96487:()=>{}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[243,580,663],()=>t(9695));module.exports=s})();